import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

//SW Expert Academy 1861 정사각형 방
public class EA1861{

	private static int[][] arr;
	private static int[][] map;
	private static int[] lut;
	private static int[] dr = new int[] { -1, 0, 1, 0 };
	private static int[] dc = new int[] { 0, 1, 0, -1 };

	private static int move(int t) {
		if (lut[t] != 0)
			return lut[t] + 1;
		int r = arr[t][0];
		int c = arr[t][1];
		int max = 1;
		for (int k = 0; k < 4; k++) {
			try {
				if (map[r + dr[k]][c + dc[k]] == t + 1) {
					int tmp = move(map[r + dr[k]][c + dc[k]]);
					if (max < tmp)
						max = tmp;
				}
			} catch (ArrayIndexOutOfBoundsException e) {
			}
		}
		return (lut[t] = max) + 1;
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		int tmp, maxIdx;
		int test_case = Integer.parseInt(br.readLine());
		for (int tc = 1; tc <= test_case; tc++) {
			int len = Integer.parseInt(br.readLine());
			int tLen = len * len + 1;
            map = new int[len][len];
            lut = new int[tLen];
            arr = new int[tLen][2];
			for (int i = 0; i < len; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < len; j++) {
					tmp = Integer.parseInt(st.nextToken());
					map[i][j] = tmp;
					arr[tmp][0] = i;
					arr[tmp][1] = j;
				}
			}

			maxIdx = 0;
			for (int t = 1; t < tLen; t++) 
				if (lut[maxIdx] + 1 < move(t))
					maxIdx = t;
			
			bw.write("#" + tc + " " + maxIdx + " " + lut[maxIdx]+"\n");
		}
		bw.flush();
	}

}